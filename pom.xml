<?xml version="1.0"?>
<project
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
		xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>se.sundsvall.dept44</groupId>
		<artifactId>dept44-service-parent</artifactId>
		<version>5.0.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>se.sundsvall</groupId>
	<artifactId>api-service-incident-mapper</artifactId>
	<version>1.0</version>
	<name>api-service-incident-mapper</name>
	<properties>
		<docker.image.name>ms-incident-mapper</docker.image.name>
		<generated-sources-path>${project.build.directory}/generated-sources</generated-sources-path>
		<generated-sources-java-path>src/main/java</generated-sources-java-path>
		<shedlock.version>5.13.0</shedlock.version>
		<jsoup.version>1.17.2</jsoup.version>
		<jira-client.version>2.2.0</jira-client.version>
		<faux-pas.version>0.9.0</faux-pas.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>se.sundsvall.dept44</groupId>
			<artifactId>dept44-starter-feign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>faux-pas</artifactId>
			<version>${faux-pas.version}</version>
		</dependency>
		<dependency>
			<groupId>com.chavaillaz</groupId>
			<artifactId>jira-client</artifactId>
			<version>${jira-client.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-mysql</artifactId>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-spring</artifactId>
			<version>${shedlock.version}</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-provider-jdbc-template</artifactId>
			<version>${shedlock.version}</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>se.sundsvall.dept44</groupId>
			<artifactId>dept44-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mariadb</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/se/sundsvall/incidentmapper/Application*</exclude>
						<exclude>**/generated/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>messaging-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/integrations/messaging-api.yml
							</inputSpec>
							<output>${generated-sources-path}</output>
							<generatorName>spring</generatorName>
							<generateApis>false</generateApis>
							<generateSupportingFiles>false</generateSupportingFiles>
							<configOptions>
								<useSpringBoot3>true</useSpringBoot3>
								<sourceFolder>models</sourceFolder>
								<dateLibrary>java8</dateLibrary>
								<apiPackage>generated</apiPackage>
								<modelPackage>generated.se.sundsvall.messaging</modelPackage>
								<openApiNullable>false</openApiNullable>
								<generatePom>false</generatePom>
								<useBeanValidation>true</useBeanValidation>
								<useSwaggerAnnotations>true</useSwaggerAnnotations>
								<interfaceOnly>true</interfaceOnly>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>pob-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>src/main/resources/integrations/pob-api.yml
							</inputSpec>
							<output>${generated-sources-path}</output>
							<generatorName>spring</generatorName>
							<generateApis>false</generateApis>
							<generateSupportingFiles>false</generateSupportingFiles>
							<configOptions>
								<useSpringBoot3>true</useSpringBoot3>
								<sourceFolder>models</sourceFolder>
								<dateLibrary>java8</dateLibrary>
								<apiPackage>generated</apiPackage>
								<modelPackage>generated.se.sundsvall.pob</modelPackage>
								<openApiNullable>false</openApiNullable>
								<generatePom>false</generatePom>
								<useBeanValidation>true</useBeanValidation>
								<useSwaggerAnnotations>true</useSwaggerAnnotations>
								<interfaceOnly>true</interfaceOnly>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>add-generated-source</id>
						<phase>initialize</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${generated-sources-path}/${generated-sources-java-path}
								</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<!-- Tell jacoco where to generate the unit test file -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>surefireArgLine</propertyName>
							<destFile>${project.build.directory}/jacoco-ut.exec</destFile>
						</configuration>
					</execution>
					<!-- Tell jacoco where to find the unit test file and where to generate the report -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.build.directory}/jacoco-ut-report/</outputDirectory>
						</configuration>
					</execution>
					<!-- Tell jacoco where to generate the integration test file -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Tell jacoco where to find the integration test file and where to generate the report -->
					<execution>
						<id>post-integration-test</id>
						<!-- Cannot bind it to a phase before this since the tests haven't been collected yet. -->
						<phase>verify</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
							<outputDirectory>${project.build.directory}/jacoco-it-report/</outputDirectory>
						</configuration>
					</execution>
					<!--Combine UT and IT report into MERGE report-->
					<execution>
						<id>merge</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/jacoco-merge.exec</destFile>
						</configuration>
					</execution>
					<!-- Tell jacoco where to find the merge file and where to generate the report -->
					<execution>
						<id>merge-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco-merge.exec</dataFile>
							<outputDirectory>${project.build.directory}/jacoco-merge-report/</outputDirectory>
						</configuration>
					</execution>
					<!-- Merge and generate Jacoco report -->
					<execution>
						<id>check-coverage-metrics</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<!-- Tell jacoco which file to analyze -->
							<dataFile>${project.build.directory}/jacoco-merge.exec</dataFile>
							<rules>
								<rule>
									<element>CLASS</element>
									<!-- We want line and branch coverage of 85%. -->
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.line.level}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.branch.level}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
</project>
